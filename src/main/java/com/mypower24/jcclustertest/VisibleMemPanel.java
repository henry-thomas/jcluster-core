/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mypower24.jcclustertest;

import com.mypower24.jcclustertest.customComp.LogTextArea;
import com.mypower24.jcclustertest.tableModel.GenericBeanTableModel;
import com.mypower24.jcclustertest.tableModel.JTableModelDescription;
import java.util.ArrayList;
import java.util.Map;
import java.util.Set;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jcluster.core.JcMember;
import org.jcluster.core.RemMembFilter;

/**
 *
 * @author henry
 */
public class VisibleMemPanel extends javax.swing.JPanel {

    LogTextArea log;
    JcTestWindow window;
    String selectedRemoteMember;
    JcMember selectedMember;
    Map<String, RemMembFilter> fMap;

    GenericBeanTableModel<RemMembFilter> filterNamesListModel = new GenericBeanTableModel<>(
            new JTableModelDescription("Filter Name", "filterName"),
            new JTableModelDescription("Known Missing", "trIdxMisses"),
            new JTableModelDescription("Latest Trx", "trIdx")) {
        private static final long serialVersionUID = 1L;
    };

    /**
     * Creates new form ExecutionTestPanle
     *
     * @param w
     */
    public VisibleMemPanel(JcTestWindow w) {
        initComponents();
        this.window = w;
        tblMemFilters.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblVisibleMembers.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public void setSelectedMember(JcMember mem) {
        this.selectedMember = mem;
    }

    public void onSelectedRemoteMemberChange() {
        int rowIdx = tblVisibleMembers.getSelectedRow();

        filterNamesListModel.clear();
        if (rowIdx == -1) {
            lblCallDesc.setText("Please select remote member");
            return;
        }
        txtFilterValues.setText("");

        selectedRemoteMember = tblVisibleMembers.getValueAt(rowIdx, 1).toString();
        lblCallDesc.setText(selectedMember.getId() + "->" + selectedRemoteMember);
        try {

            fMap = window.metricsMonitor.getMemFilterMap(selectedMember.getId(), selectedRemoteMember);
            if (fMap == null) {
                return;
            }
            filterNamesListModel.add(new ArrayList<>(fMap.values()));
        } catch (Exception e) {
            window.info(e.getMessage());
        }
    }

    public void updateVisibleMembersTable(Map<String, String> visibleMembers) {
        SwingUtilities.invokeLater(() -> {
            DefaultTableModel dtm = (DefaultTableModel) tblVisibleMembers.getModel();

            dtm.getDataVector().clear();
            for (Map.Entry<String, String> entry : visibleMembers.entrySet()) {
                String id = entry.getKey();
                String appName = entry.getValue();

                dtm.addRow(new Object[]{appName, id});
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane15 = new javax.swing.JScrollPane();
        tblMemFilters = new javax.swing.JTable();
        btnRemoteMemTest = new javax.swing.JButton();
        lblCallDesc = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        tblVisibleMembers = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtFilterValues = new javax.swing.JTextArea();

        setMinimumSize(new java.awt.Dimension(500, 500));
        setName(""); // NOI18N

        tblMemFilters.setModel(filterNamesListModel);
        tblMemFilters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblMemFiltersMouseReleased(evt);
            }
        });
        jScrollPane15.setViewportView(tblMemFilters);

        btnRemoteMemTest.setText("Test Connection");
        btnRemoteMemTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoteMemTestActionPerformed(evt);
            }
        });

        lblCallDesc.setText("selMember -> remoteSelMember");

        tblVisibleMembers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "App Name", "Instance ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVisibleMembers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblVisibleMembersMouseReleased(evt);
            }
        });
        jScrollPane17.setViewportView(tblVisibleMembers);

        txtFilterValues.setColumns(20);
        txtFilterValues.setRows(5);
        jScrollPane1.setViewportView(txtFilterValues);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoteMemTest)
                            .addComponent(lblCallDesc))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane15)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCallDesc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoteMemTest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblMemFiltersMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMemFiltersMouseReleased
        int rowIdx = tblMemFilters.getSelectedRow();

        if (rowIdx == -1) {
//            lblCallDesc.setText("Please select remote member");
            return;
        }

        String selFilter = tblMemFilters.getValueAt(rowIdx, 0).toString();

        txtFilterValues.setText("");
        StringBuilder sb = new StringBuilder();

        if (fMap == null) {
            return;
        }

        RemMembFilter remFilter = fMap.get(selFilter);
        Set<Object> values = remFilter.getValueSet();
        for (Object value : values) {
            sb.append(value.toString()).append("\n");
        }

        txtFilterValues.setText(sb.toString());

    }//GEN-LAST:event_tblMemFiltersMouseReleased

    private void btnRemoteMemTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoteMemTestActionPerformed
        try {
            window.info(window.metricsMonitor.callRemote(selectedMember.getDesc().getInstanceId(), selectedRemoteMember));
        } catch (Exception e) {
            window.info(e.getMessage());
        }
    }//GEN-LAST:event_btnRemoteMemTestActionPerformed

    private void tblVisibleMembersMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVisibleMembersMouseReleased
        onSelectedRemoteMemberChange();
    }//GEN-LAST:event_tblVisibleMembersMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemoteMemTest;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JLabel lblCallDesc;
    private javax.swing.JTable tblMemFilters;
    private javax.swing.JTable tblVisibleMembers;
    private javax.swing.JTextArea txtFilterValues;
    // End of variables declaration//GEN-END:variables
}
